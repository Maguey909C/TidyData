# Step 1: Load packages 
library(data.table)
library(dplyr)
library(plyr)

# Step 2: Download files to local directory
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%
20Dataset.zip"
download.file(url,destfile = "zipped.zip")

# Step 3: Set working directory 
dir.create("tidy_data_project")
setwd("tidy_data_project")

# Step 4: Load data into R
features<-read.table("features.txt",stringsAsFactors = FALSE)[,2]
X_train<-read.table("X_train.txt",col.names = features)
Y_train<-read.table("Y_train.txt",col.names = "Activity")
subject_train<-read.table("subject_train.txt", col.names = "Subject")
X_test<-read.table("X_test.txt",col.names = features)
Y_test<-read.table("Y_test.txt",col.names = "Activity")
subject_test<-read.table("subject_test.txt", col.names = "Subject")

# Step 5: Merge train and test data
test_data<-cbind(subject_test,Y_test,X_test)
train_data<-cbind(subject_train,Y_train,X_train)
full_data<-rbind(test_data,train_data)

# Step 6: Extract only the mean and standard deviation from the dataset 
features_index<-grep(("mean\\(\\)|std\\(\\)"),features)
finaldata<-full_data[,c(1,2,features_index+2)]

# Step 7: Uses descriptive activity names replace numbers in activities column
activity_labels<-c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING")
finaldata$Activity<-factor(finaldata$Activity,labels = activity_labels)

# Step 8: Appropriately labels the data set with descriptive variable names. 

names(finaldata)<-gsub("mean","-Mean",names(finaldata))
names(finaldata)<-gsub("std","-Std",names(finaldata))
names(finaldata)<-gsub("*\\.","",names(finaldata))
names(finaldata)<- gsub("^t", "time", names(finaldata))
names(finaldata)<- gsub("^f", "frequency", names(finaldata))
names(finaldata)<- gsub("X","-X", names(finaldata))
names(finaldata)<- gsub("Y","-Y", names(finaldata))
names(finaldata)<- gsub("Z","-Z", names(finaldata))

# Step 9: Make a tidy dataset based on the means and standard deviations
tidy_data<-finaldata%>%group_by(Activity,Subject)%>%summarise_each(funs(mean))

# Step 10: Write a file of new tidy data set
write.table(tidy_data, "tidy_data.txt", row.names = FALSE)
